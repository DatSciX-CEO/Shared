Deduplicated Count by Primary Job Type =
VAR
    // Step 1: Create a virtual table of relevant placements with a priority rank. (No change here)
    PlacementsWithRank =
    ADDCOLUMNS (
        CALCULATETABLE (
            'Datalake_Bullhorn_Query',
            'Datalake_Bullhorn_Query'[Job_Type] IN {
                "ELS Managed Services", "Advisory", "Legal Staffing",
                "Support Staffing", "Direct Review"
            }
        ),
        "PlacementRank",
        SWITCH (
            TRUE (),
            'Datalake_Bullhorn_Query'[Job_Type] = "ELS Managed Services", 1,
            'Datalake_Bullhorn_Query'[Job_Type] = "Advisory", 2,
            'Datalake_Bullhorn_Query'[Job_Type] = "Legal Staffing", 3,
            'Datalake_Bullhorn_Query'[Job_Type] = "Support Staffing", 4,
            'Datalake_Bullhorn_Query'[Job_Type] = "Direct Review", 5,
            999
        )
    )
VAR
    // Step 2: For each unique candidate, find their single, highest-priority Job Type.
    // This replaces the problematic GROUPBY with a more robust TOPN pattern.
    CandidatePrimaryJobType =
    ADDCOLUMNS (
        SUMMARIZE ( PlacementsWithRank, 'Datalake_Bullhorn_Query'[CandidateID] ),
        "PrimaryJobType",
        CALCULATE (
            // After finding the top row, get its Job_Type value.
            SELECTEDVALUE ( 'Datalake_Bullhorn_Query'[Job_Type] ),
            // Use TOPN to find the single highest-priority row for the current candidate.
            TOPN (
                1,
                // Consider all placements for the current candidate.
                CALCULATETABLE ( PlacementsWithRank ),
                // The priority is determined by the rank, ascending (1 is highest).
                [PlacementRank], ASC,
                // Add a tie-breaker: if ranks are the same, take the first Job Type alphabetically.
                'Datalake_Bullhorn_Query'[Job_Type], ASC
            )
        )
    )
VAR
    // Step 3: Determine which Job Types are currently selected in the filter context. (No change here)
    SelectedJobTypes =
    VALUES ( 'Datalake_Bullhorn_Query'[Job_Type] )
VAR
    // Step 4: Filter our deduplicated list to match the current selection. (No change here)
    FinalCandidatesToCount =
    FILTER (
        CandidatePrimaryJobType,
        [PrimaryJobType] IN SelectedJobTypes
    )
RETURN
    // Step 5: Count the rows of the final, filtered table. (No change here)
    COUNTROWS ( FinalCandidatesToCount )