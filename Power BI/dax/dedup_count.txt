
Deduplicated Count by Primary Job Type =
VAR
    // Step 1: Create a virtual table of relevant placements with a priority rank.
    // The 'Status = "Placed"' filter is removed as your data is pre-filtered.
    PlacementsWithRank =
    ADDCOLUMNS (
        FILTER (
            'Datalake_Bullhorn_Query',
            'Datalake_Bullhorn_Query'[Job_Type]
                IN {
                    "ELS Managed Services",
                    "Advisory",
                    "Legal Staffing",
                    "Support Staffing",
                    "Direct Review"
                }
        ),
        "PlacementRank",
        SWITCH (
            TRUE (),
            'Datalake_Bullhorn_Query'[Job_Type] = "ELS Managed Services", 1,
            'Datalake_Bullhorn_Query'[Job_Type] = "Advisory", 2,
            'Datalake_Bullhorn_Query'[Job_Type] = "Legal Staffing", 3,
            'Datalake_Bullhorn_Query'[Job_Type] = "Support Staffing", 4,
            'Datalake_Bullhorn_Query'[Job_Type] = "Direct Review", 5,
            999 // Fallback rank
        )
    )
VAR
    // Step 2: Use GROUPBY to efficiently create a table of each candidate
    // and their single highest-priority Job Type based on the rank.
    CandidatePrimaryJobType =
    GROUPBY (
        PlacementsWithRank,
        'Datalake_Bullhorn_Query'[CandidateID],
        "PrimaryJobType",
        VAR CurrentCandidateGroup = CURRENTGROUP ()
        // Find the best rank (lowest number) within this candidate's placements
        VAR TopRank = MINX ( CurrentCandidateGroup, [PlacementRank] )
        // Get the Job Type associated with that best rank.
        // MINX is used again to handle any potential ties in rank, returning the first Job Type alphabetically.
        VAR Result =
            MINX (
                FILTER ( CurrentCandidateGroup, [PlacementRank] = TopRank ),
                'Datalake_Bullhorn_Query'[Job_Type]
            )
        RETURN
            Result
    )
RETURN
    // Step 3: Count the candidates. This expression ensures the measure works
    // correctly when filtered by 'Job Type' in a visual.
    CALCULATE (
        COUNTROWS ( CandidatePrimaryJobType ),
        TREATAS (
            VALUES ( 'Datalake_Bullhorn_Query'[Job_Type] ),
            [PrimaryJobType]
        )
    )